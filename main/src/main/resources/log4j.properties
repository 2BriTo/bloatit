
# Il existe un fichier de conf en XML
# Il est nécessaire de l'utiliser pour avoir la même source dans 
# plusieurs appender en fonction de la séverité


### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### direct messages to file hibernate.log ###
#log4j.appender.file=org.apache.log4j.FileAppender
#log4j.appender.file.File=hibernate.log
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

#email appender
#log4j.appender.mail=org.apache.log4j.net.SMTPAppender
#log4j.appender.mail.BufferSize=1
#log4j.appender.mail.SMTPHost="smtp.myservername.xx"
#log4j.appender.mail.From=fromemail@myservername.xx
#log4j.appender.mail.To=toemail@myservername.xx
#log4j.appender.mail.Subject=Log ...
#log4j.appender.mail.threshold=error
#log4j.appender.mail.layout=org.apache.log4j.PatternLayout
#log4j.appender.mail.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n



### set log levels ##

log4j.rootLogger=warn, stdout

# hibernate
log4j.logger.net.sf.hibernate=fatal
### log JDBC bind parameters ###
log4j.logger.net.sf.hibernate.type=fatal
### log prepared statement cache activity ###
log4j.logger.net.sf.hibernate.ps.PreparedStatementCache=fatal

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.net.sf.hibernate.connection.DriverManagerConnectionProvider=trace

#######
log4j.logger.com.bloatit.framework=warn
log4j.logger.com.bloatit.model.data=warn
log4j.logger.com.bloatit.web=info
