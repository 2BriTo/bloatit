#!/usr/bin/python3

import os
import hashlib
import shutil
import re

def getVersion():
    versionFile = open('../main/target/classes/build.properties')
    base,version = versionFile.readline().split('=')
    return version.rstrip()




def generateDir(sourceDir, destDir):

    # Create destination directory is not exists
    if not os.path.exists(destDir):
        os.makedirs(destDir)

    files = os.listdir(sourceDir)
    
    for afile in files:
        if os.path.isdir(os.path.join(sourceDir,afile)):
            # Generate sub directory
            generateDir(os.path.join(sourceDir, afile), os.path.join(destDir, afile))
        else:
            generateFile(os.path.join(sourceDir, afile), destDir)
            
def generateFile(sourceFile, destDir):
    
    base = os.path.basename(sourceFile);
    sourceMd5 = md5(sourceFile)
    
    root, extension = os.path.splitext(base)
    
    if not extension:
        # Don't generate Makefiles
        return
    
    lastVersion = getLastVersion(destDir, base)
    
    if lastVersion and sourceMd5 == md5(os.path.join(destDir, lastVersion)):
        return
    
    if lastVersion:
        print("last version '"+lastVersion+"' is perimed: "+md5(os.path.join(destDir, lastVersion)))
    else:
        print('no %s yet' % base)
    

    
    newName = root+'.'+version+extension

    #Copy the file
    shutil.copyfile(sourceFile, os.path.join(destDir, newName))
    
    print('Copied at: '+os.path.join(destDir, newName))

def md5(afile):
    content = open(afile, 'rb').read()
    return hashlib.md5(content).hexdigest()



prog = re.compile('^(.*)\.([0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z]+)?)(\.(tar\.)?([a-zA-Z]+))$')                                

    
def getLastVersion(directory, baseName):

    root, extension = os.path.splitext(baseName)

    children = os.listdir(directory)
    
    versionChildren = list()
    

    
    for afile in children:
        if os.path.isdir(os.path.join(directory,afile)):
            continue
        match = prog.match(afile)
        
        
        
        if match and match.group(1)+match.group(4) == baseName:
            #print('basename: '+baseName+' '+match.group(1)+match.group(4))
            
            #print('test: %s  -> %s   |   .*([0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z]+)?)\.(tar\.)?([a-zA-Z]+)$' % (afile , match) )

            
            version = match.group(2)
            #print('version: '+version)
            versionChildren.append(version)
        
    last = findMax(versionChildren)
    
    #    print('last: '+str(last))
        
    if last:        
        return root + '.'+last + extension
    return None


def findMax(versionList):
    lastVersion = None

    for versionFile in versionList:
        if not lastVersion:
            lastVersion = versionFile
        else:
            if compversion(versionFile,lastVersion)  < 0:
                lastVersion = versionFile
    return lastVersion

def compversion(v1,v2):
    print('compversion: '+v1+' '+v2)

    for e1,e2 in zip(v1.split('.'), v2.split('.')):
        comp = (int(e1) > int(e2)) - (int(e1) < int(e2))
        if comp!=0:
            break
    return comp

    
    
version = getVersion()
generateDir('www_src/', '../www/')
